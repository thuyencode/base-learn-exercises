{
  "address": "0xf575de8a96f8d598616EF278E8564C33fe556d27",
  "abi": [
    {
      "inputs": [],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5531dffa36a24715ee4b6c4d235275b6297d6e8dd29a26d833e501ccb4324f37",
  "receipt": {
    "to": null,
    "from": "0x68882565EF113CE63bc464aC86e3A765d34C05C7",
    "contractAddress": "0xf575de8a96f8d598616EF278E8564C33fe556d27",
    "transactionIndex": 16,
    "gasUsed": "885833",
    "logsBloom": "0x
    "blockHash": "0x4cd37ee97d7f955f834b1c83154620d09d32cedc569460492128f0fb6f8cfac1",
    "transactionHash": "0x5531dffa36a24715ee4b6c4d235275b6297d6e8dd29a26d833e501ccb4324f37",
    "logs": [],
    "blockNumber": 22100123,
    "cumulativeGasUsed": "2563026",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "a6b192065ad8e857d48ff3205b8dba42",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TheNewKeyword/AddressBookFactory.sol\":\"AddressBookFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/TheNewKeyword/AddressBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract AddressBook is Ownable {\\n    struct Contact {\\n        uint id;\\n        string firstName;\\n        string lastName;\\n        uint[] phoneNumbers;\\n    }\\n\\n    Contact[] contacts;\\n    mapping(uint => bool) ids;\\n\\n    error ContactNotFound(uint _id);\\n\\n    constructor(address _owner) Ownable(_owner) {}\\n\\n    function addContact(\\n        uint _id,\\n        string calldata _firstName,\\n        string calldata _lastName,\\n        uint[] calldata _phoneNumbers\\n    ) external onlyOwner {\\n        contacts.push(Contact(_id, _firstName, _lastName, _phoneNumbers));\\n        ids[_id] = true;\\n    }\\n\\n    function deleteContact(uint _id) external onlyOwner {\\n        if (!ids[_id]) {\\n            revert ContactNotFound(_id);\\n        }\\n\\n        delete contacts[_id];\\n        ids[_id] = false;\\n    }\\n\\n    function getContact(\\n        uint _id\\n    ) external view onlyOwner returns (Contact memory _contact) {\\n        if (!ids[_id]) {\\n            revert ContactNotFound(_id);\\n        }\\n\\n        uint length = contacts.length;\\n\\n        for (uint i = 0; i < length; i++) {\\n            if (_id == contacts[i].id) {\\n                _contact = contacts[i];\\n            }\\n        }\\n    }\\n\\n    function getAllContacts() external view returns (Contact[] memory) {\\n        return contacts;\\n    }\\n}\\n\",\"keccak256\":\"0xc077e998d55c416412a145e5fc818ff1f84bb0575952e8a196325df0296aab5d\",\"license\":\"MIT\"},\"contracts/TheNewKeyword/AddressBookFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {AddressBook} from \\\"./AddressBook.sol\\\";\\n\\ncontract AddressBookFactory {\\n    function deploy() external returns (address) {\\n        AddressBook addressBook = new AddressBook(msg.sender);\\n\\n        return address(addressBook);\\n    }\\n}\\n\",\"keccak256\":\"0xbfd4295884b941563b13edd05d920c095f83b96de6d2b0b2afd3fbbe79f2bf0c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50610f118061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063775c300c14602d575b600080fd5b6033604f565b6040516001600160a01b03909116815260200160405180910390f35b60008033604051605d90608f565b6001600160a01b039091168152602001604051809103906000f0801580156088573d6000803e3d6000fd5b5092915050565b610e3f8061009d8339019056fe608060405234801561001057600080fd5b50604051610e3f380380610e3f83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610d42806100fd6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b9ed6fca1161005b578063b9ed6fca146100bf578063e6505e1e146100d2578063ef1d6ddd146100f2578063f2fde38b1461010757600080fd5b8063715018a6146100825780638da5cb5b1461008c578063aa7396a2146100ac575b600080fd5b61008a61011a565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61008a6100ba366004610923565b61012e565b61008a6100cd366004610a08565b61027e565b6100e56100e0366004610a08565b610325565b6040516100a39190610af0565b6100fa610586565b6040516100a39190610b0a565b61008a610115366004610b6f565b61076b565b6101226107a9565b61012c60006107d6565b565b6101366107a9565b6001604051806080016040528089815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020868102828101820190935286825292830192909187918791829185019084908082843760009201829052509390945250508354600181810186559482526020918290208451600490920201908155908301519293909290830191506102289082610c37565b506040820151600282019061023d9082610c37565b5060608201518051610259916003840191602090910190610826565b50505060009687525050600260205250506040909220805460ff191660011790555050565b6102866107a9565b60008181526002602052604090205460ff166102bc57604051623d577b60ea1b8152600481018290526024015b60405180910390fd5b600181815481106102cf576102cf610cf6565b600091825260208220600490910201818155906102ef6001830182610871565b6102fd600283016000610871565b61030b6003830160006108ab565b50506000908152600260205260409020805460ff19169055565b6103506040518060800160405280600081526020016060815260200160608152602001606081525090565b6103586107a9565b60008281526002602052604090205460ff1661038957604051623d577b60ea1b8152600481018390526024016102b3565b60015460005b8181101561057f57600181815481106103aa576103aa610cf6565b906000526020600020906004020160000154840361057757600181815481106103d5576103d5610cf6565b90600052602060002090600402016040518060800160405290816000820154815260200160018201805461040890610bae565b80601f016020809104026020016040519081016040528092919081815260200182805461043490610bae565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050815260200160028201805461049a90610bae565b80601f01602080910402602001604051908101604052809291908181526020018280546104c690610bae565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561056b57602002820191906000526020600020905b815481526020019060010190808311610557575b50505050508152505092505b60010161038f565b5050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156107625783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546105e790610bae565b80601f016020809104026020016040519081016040528092919081815260200182805461061390610bae565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050815260200160028201805461067990610bae565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590610bae565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561074a57602002820191906000526020600020905b815481526020019060010190808311610736575b505050505081525050815260200190600101906105aa565b50505050905090565b6107736107a9565b6001600160a01b03811661079d57604051631e4fbdf760e01b8152600060048201526024016102b3565b6107a6816107d6565b50565b6000546001600160a01b0316331461012c5760405163118cdaa760e01b81523360048201526024016102b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610861579160200282015b82811115610861578251825591602001919060010190610846565b5061086d9291506108c5565b5090565b50805461087d90610bae565b6000825580601f1061088d575050565b601f0160209004906000526020600020908101906107a691906108c5565b50805460008255906000526020600020908101906107a691905b5b8082111561086d57600081556001016108c6565b60008083601f8401126108ec57600080fd5b50813567ffffffffffffffff81111561090457600080fd5b60208301915083602082850101111561091c57600080fd5b9250929050565b60008060008060008060006080888a03121561093e57600080fd5b87359650602088013567ffffffffffffffff81111561095c57600080fd5b6109688a828b016108da565b909750955050604088013567ffffffffffffffff81111561098857600080fd5b6109948a828b016108da565b909550935050606088013567ffffffffffffffff8111156109b457600080fd5b8801601f81018a136109c557600080fd5b803567ffffffffffffffff8111156109dc57600080fd5b8a60208260051b84010111156109f157600080fd5b602082019350809250505092959891949750929550565b600060208284031215610a1a57600080fd5b5035919050565b6000815180845260005b81811015610a4757602081850181015186830182015201610a2b565b506000602082860101526020601f19601f83011685010191505092915050565b805182526000602082015160806020850152610a866080850182610a21565b905060408301518482036040860152610a9f8282610a21565b60608581015187830391880191909152805180835260209182019450600093509101905b80831015610ae65783518252602082019150602084019350600183019250610ac3565b5095945050505050565b602081526000610b036020830184610a67565b9392505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610b6357603f19878603018452610b4e858351610a67565b94506020938401939190910190600101610b32565b50929695505050505050565b600060208284031215610b8157600080fd5b81356001600160a01b0381168114610b0357600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610bc257607f821691505b602082108103610be257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c3257806000526020600020601f840160051c81016020851015610c0f5750805b601f840160051c820191505b81811015610c2f5760008155600101610c1b565b50505b505050565b815167ffffffffffffffff811115610c5157610c51610b98565b610c6581610c5f8454610bae565b84610be8565b6020601f821160018114610c995760008315610c815750848201515b600019600385901b1c1916600184901b178455610c2f565b600084815260208120601f198516915b82811015610cc95787850151825560209485019460019092019101610ca9565b5084821015610ce75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207eae03d1346f2df1b4c6f01a6288b6d0ea935df5b997686d172d17d8f21c229c64736f6c634300081a0033a2646970667358221220277f9a2ad2653045f0ac88f6fc7aaa0525d6aaaf6c323c52d9c3786949fd1f9a64736f6c634300081a0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063775c300c14602d575b600080fd5b6033604f565b6040516001600160a01b03909116815260200160405180910390f35b60008033604051605d90608f565b6001600160a01b039091168152602001604051809103906000f0801580156088573d6000803e3d6000fd5b5092915050565b610e3f8061009d8339019056fe608060405234801561001057600080fd5b50604051610e3f380380610e3f83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610d42806100fd6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b9ed6fca1161005b578063b9ed6fca146100bf578063e6505e1e146100d2578063ef1d6ddd146100f2578063f2fde38b1461010757600080fd5b8063715018a6146100825780638da5cb5b1461008c578063aa7396a2146100ac575b600080fd5b61008a61011a565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61008a6100ba366004610923565b61012e565b61008a6100cd366004610a08565b61027e565b6100e56100e0366004610a08565b610325565b6040516100a39190610af0565b6100fa610586565b6040516100a39190610b0a565b61008a610115366004610b6f565b61076b565b6101226107a9565b61012c60006107d6565b565b6101366107a9565b6001604051806080016040528089815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020868102828101820190935286825292830192909187918791829185019084908082843760009201829052509390945250508354600181810186559482526020918290208451600490920201908155908301519293909290830191506102289082610c37565b506040820151600282019061023d9082610c37565b5060608201518051610259916003840191602090910190610826565b50505060009687525050600260205250506040909220805460ff191660011790555050565b6102866107a9565b60008181526002602052604090205460ff166102bc57604051623d577b60ea1b8152600481018290526024015b60405180910390fd5b600181815481106102cf576102cf610cf6565b600091825260208220600490910201818155906102ef6001830182610871565b6102fd600283016000610871565b61030b6003830160006108ab565b50506000908152600260205260409020805460ff19169055565b6103506040518060800160405280600081526020016060815260200160608152602001606081525090565b6103586107a9565b60008281526002602052604090205460ff1661038957604051623d577b60ea1b8152600481018390526024016102b3565b60015460005b8181101561057f57600181815481106103aa576103aa610cf6565b906000526020600020906004020160000154840361057757600181815481106103d5576103d5610cf6565b90600052602060002090600402016040518060800160405290816000820154815260200160018201805461040890610bae565b80601f016020809104026020016040519081016040528092919081815260200182805461043490610bae565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050815260200160028201805461049a90610bae565b80601f01602080910402602001604051908101604052809291908181526020018280546104c690610bae565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561056b57602002820191906000526020600020905b815481526020019060010190808311610557575b50505050508152505092505b60010161038f565b5050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156107625783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546105e790610bae565b80601f016020809104026020016040519081016040528092919081815260200182805461061390610bae565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050815260200160028201805461067990610bae565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590610bae565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561074a57602002820191906000526020600020905b815481526020019060010190808311610736575b505050505081525050815260200190600101906105aa565b50505050905090565b6107736107a9565b6001600160a01b03811661079d57604051631e4fbdf760e01b8152600060048201526024016102b3565b6107a6816107d6565b50565b6000546001600160a01b0316331461012c5760405163118cdaa760e01b81523360048201526024016102b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610861579160200282015b82811115610861578251825591602001919060010190610846565b5061086d9291506108c5565b5090565b50805461087d90610bae565b6000825580601f1061088d575050565b601f0160209004906000526020600020908101906107a691906108c5565b50805460008255906000526020600020908101906107a691905b5b8082111561086d57600081556001016108c6565b60008083601f8401126108ec57600080fd5b50813567ffffffffffffffff81111561090457600080fd5b60208301915083602082850101111561091c57600080fd5b9250929050565b60008060008060008060006080888a03121561093e57600080fd5b87359650602088013567ffffffffffffffff81111561095c57600080fd5b6109688a828b016108da565b909750955050604088013567ffffffffffffffff81111561098857600080fd5b6109948a828b016108da565b909550935050606088013567ffffffffffffffff8111156109b457600080fd5b8801601f81018a136109c557600080fd5b803567ffffffffffffffff8111156109dc57600080fd5b8a60208260051b84010111156109f157600080fd5b602082019350809250505092959891949750929550565b600060208284031215610a1a57600080fd5b5035919050565b6000815180845260005b81811015610a4757602081850181015186830182015201610a2b565b506000602082860101526020601f19601f83011685010191505092915050565b805182526000602082015160806020850152610a866080850182610a21565b905060408301518482036040860152610a9f8282610a21565b60608581015187830391880191909152805180835260209182019450600093509101905b80831015610ae65783518252602082019150602084019350600183019250610ac3565b5095945050505050565b602081526000610b036020830184610a67565b9392505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610b6357603f19878603018452610b4e858351610a67565b94506020938401939190910190600101610b32565b50929695505050505050565b600060208284031215610b8157600080fd5b81356001600160a01b0381168114610b0357600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610bc257607f821691505b602082108103610be257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c3257806000526020600020601f840160051c81016020851015610c0f5750805b601f840160051c820191505b81811015610c2f5760008155600101610c1b565b50505b505050565b815167ffffffffffffffff811115610c5157610c51610b98565b610c6581610c5f8454610bae565b84610be8565b6020601f821160018114610c995760008315610c815750848201515b600019600385901b1c1916600184901b178455610c2f565b600084815260208120601f198516915b82811015610cc95787850151825560209485019460019092019101610ca9565b5084821015610ce75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207eae03d1346f2df1b4c6f01a6288b6d0ea935df5b997686d172d17d8f21c229c64736f6c634300081a0033a2646970667358221220277f9a2ad2653045f0ac88f6fc7aaa0525d6aaaf6c323c52d9c3786949fd1f9a64736f6c634300081a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}