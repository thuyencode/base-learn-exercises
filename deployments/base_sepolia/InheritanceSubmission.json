{
  "address": "0x01BADA9a934d9244F2B14a2a75Ef0B8764482C54",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_salesPerson",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_engineeringManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "engineeringManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salesPerson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9151a05618942ddd48a9c57d0eb304137d1f2e6f648737a77886f324e3e2d8b8",
  "receipt": {
    "to": null,
    "from": "0x68882565EF113CE63bc464aC86e3A765d34C05C7",
    "contractAddress": "0x01BADA9a934d9244F2B14a2a75Ef0B8764482C54",
    "transactionIndex": 28,
    "gasUsed": "138571",
    "logsBloom": "0x
    "blockHash": "0x573d8e1f2b94355f5f82862955982ec96679b97bdd7df99b41b31cfbe39e1202",
    "transactionHash": "0x9151a05618942ddd48a9c57d0eb304137d1f2e6f648737a77886f324e3e2d8b8",
    "logs": [],
    "blockNumber": 22061390,
    "cumulativeGasUsed": "5062967",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6AccA7Cf5c622d68Bc393525D1926B56ff7bF7c0",
    "0x88842a52083e84c1708F87750f496E9ee6C211a9"
  ],
  "numDeployments": 1,
  "solcInputHash": "2336cc388017c663613de2654a82727f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_salesPerson\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_engineeringManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"engineeringManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesPerson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Inheritance/InheritanceSubmission.sol\":\"InheritanceSubmission\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Inheritance/InheritanceSubmission.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ncontract InheritanceSubmission {\\n    address public salesPerson;\\n    address public engineeringManager;\\n\\n    constructor(address _salesPerson, address _engineeringManager) {\\n        salesPerson = _salesPerson;\\n        engineeringManager = _engineeringManager;\\n    }\\n}\\n\\nabstract contract Employee {\\n    uint public idNumber;\\n    uint public managerId;\\n\\n    constructor(uint _idNumber, uint _managerId) {\\n        idNumber = _idNumber;\\n        managerId = _managerId;\\n    }\\n\\n    function getAnnualCost() external view virtual returns (uint) {}\\n}\\n\\ncontract Salaried is Employee {\\n    uint public annualSalary;\\n\\n    constructor(\\n        uint _idNumber,\\n        uint _managerId,\\n        uint _annualSalary\\n    ) Employee(_idNumber, _managerId) {\\n        annualSalary = _annualSalary;\\n    }\\n\\n    function getAnnualCost() external view override returns (uint) {\\n        return annualSalary;\\n    }\\n}\\n\\ncontract Hourly is Employee {\\n    uint public hourlyRate;\\n\\n    constructor(\\n        uint _idNumber,\\n        uint _managerId,\\n        uint _hourlyRate\\n    ) Employee(_idNumber, _managerId) {\\n        hourlyRate = _hourlyRate;\\n    }\\n\\n    function getAnnualCost() external view override returns (uint) {\\n        return hourlyRate * 2080;\\n    }\\n}\\n\\ncontract Manager {\\n    uint[] public employeeIds;\\n\\n    function addReport(uint256 _idNumber) external {\\n        employeeIds.push(_idNumber);\\n    }\\n\\n    function resetReports() external {\\n        delete employeeIds;\\n    }\\n}\\n\\ncontract Salesperson is Hourly {\\n    constructor(\\n        uint256 _idNumber,\\n        uint256 _managerId,\\n        uint256 _hourlyRate\\n    ) Hourly(_idNumber, _managerId, _hourlyRate) {}\\n}\\n\\ncontract EngineeringManager is Salaried, Manager {\\n    constructor(\\n        uint256 _idNumber,\\n        uint256 _managerId,\\n        uint256 _annualSalary\\n    ) Salaried(_idNumber, _managerId, _annualSalary) {}\\n}\\n\",\"keccak256\":\"0xf762228717a3a86b14356d0ba77fbe53bd0ecf378ad1657cf27aed45da725ee1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161016a38038061016a83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b60ad806100bd6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630f628194146037578063687981dd146065575b600080fd5b6000546049906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6001546049906001600160a01b03168156fea264697066735822122071f33bd790a6b13c8b133d2eb774ab869c76c480edaf89bba49403620fccca1764736f6c63430008140033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c80630f628194146037578063687981dd146065575b600080fd5b6000546049906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6001546049906001600160a01b03168156fea264697066735822122071f33bd790a6b13c8b133d2eb774ab869c76c480edaf89bba49403620fccca1764736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Inheritance/InheritanceSubmission.sol:InheritanceSubmission",
        "label": "salesPerson",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5,
        "contract": "contracts/Inheritance/InheritanceSubmission.sol:InheritanceSubmission",
        "label": "engineeringManager",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}